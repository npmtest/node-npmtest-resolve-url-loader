{"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_resolve_url_loader */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/lib.npmtest_resolve_url_loader.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/lib.npmtest_resolve_url_loader.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":63}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":69}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_resolve_url_loader */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_resolve_url_loader = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_resolve_url_loader = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":62}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":76},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-resolve-url-loader && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_resolve_url_loader */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_resolve_url_loader","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_resolve_url_loader.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_resolve_url_loader.rollup.js'] =","            local.assetsDict['/assets.npmtest_resolve_url_loader.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_resolve_url_loader.__dirname +","                    '/lib.npmtest_resolve_url_loader.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"resolveUrlLoader","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":46}}},"2":{"name":"handleException","line":138,"loc":{"start":{"line":138,"column":2},"end":{"line":138,"column":45}}},"3":{"name":"reworkPlugin","line":156,"loc":{"start":{"line":156,"column":2},"end":{"line":156,"column":36}}},"4":{"name":"visitor","line":161,"loc":{"start":{"line":161,"column":22},"end":{"line":161,"column":53}}},"5":{"name":"eachDeclaration","line":172,"loc":{"start":{"line":172,"column":4},"end":{"line":172,"column":42}}},"6":{"name":"eachSplitOrGroup","line":207,"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":42}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":15,"column":64}},"2":{"start":{"line":17,"column":0},"end":{"line":19,"column":72}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}},"4":{"start":{"line":30,"column":0},"end":{"line":241,"column":1}},"5":{"start":{"line":34,"column":2},"end":{"line":35,"column":51}},"6":{"start":{"line":39,"column":2},"end":{"line":47,"column":5}},"7":{"start":{"line":50,"column":2},"end":{"line":51,"column":65}},"8":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":77}},"10":{"start":{"line":57,"column":2},"end":{"line":57,"column":21}},"11":{"start":{"line":60,"column":2},"end":{"line":60,"column":52}},"12":{"start":{"line":61,"column":2},"end":{"line":96,"column":3}},"13":{"start":{"line":64,"column":4},"end":{"line":71,"column":5}},"14":{"start":{"line":65,"column":6},"end":{"line":70,"column":7}},"15":{"start":{"line":66,"column":8},"end":{"line":66,"column":42}},"16":{"start":{"line":69,"column":8},"end":{"line":69,"column":105}},"17":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"18":{"start":{"line":79,"column":4},"end":{"line":79,"column":21}},"19":{"start":{"line":80,"column":4},"end":{"line":85,"column":5}},"20":{"start":{"line":81,"column":6},"end":{"line":81,"column":76}},"21":{"start":{"line":84,"column":6},"end":{"line":84,"column":68}},"22":{"start":{"line":88,"column":4},"end":{"line":88,"column":60}},"23":{"start":{"line":91,"column":4},"end":{"line":91,"column":93}},"24":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"25":{"start":{"line":100,"column":2},"end":{"line":101,"column":15}},"26":{"start":{"line":102,"column":2},"end":{"line":113,"column":3}},"27":{"start":{"line":103,"column":4},"end":{"line":108,"column":9}},"28":{"start":{"line":112,"column":4},"end":{"line":112,"column":51}},"29":{"start":{"line":116,"column":2},"end":{"line":130,"column":3}},"30":{"start":{"line":119,"column":4},"end":{"line":119,"column":88}},"31":{"start":{"line":122,"column":4},"end":{"line":122,"column":41}},"32":{"start":{"line":125,"column":4},"end":{"line":125,"column":55}},"33":{"start":{"line":129,"column":4},"end":{"line":129,"column":20}},"34":{"start":{"line":138,"column":2},"end":{"line":150,"column":3}},"35":{"start":{"line":139,"column":4},"end":{"line":141,"column":18}},"36":{"start":{"line":142,"column":4},"end":{"line":142,"column":110}},"37":{"start":{"line":143,"column":4},"end":{"line":148,"column":5}},"38":{"start":{"line":144,"column":6},"end":{"line":144,"column":32}},"39":{"start":{"line":146,"column":9},"end":{"line":148,"column":5}},"40":{"start":{"line":147,"column":6},"end":{"line":147,"column":34}},"41":{"start":{"line":149,"column":4},"end":{"line":149,"column":19}},"42":{"start":{"line":156,"column":2},"end":{"line":240,"column":3}},"43":{"start":{"line":157,"column":4},"end":{"line":157,"column":107}},"44":{"start":{"line":161,"column":4},"end":{"line":166,"column":7}},"45":{"start":{"line":162,"column":6},"end":{"line":165,"column":7}},"46":{"start":{"line":163,"column":8},"end":{"line":164,"column":36}},"47":{"start":{"line":172,"column":4},"end":{"line":239,"column":5}},"48":{"start":{"line":173,"column":6},"end":{"line":174,"column":20}},"49":{"start":{"line":175,"column":6},"end":{"line":198,"column":7}},"50":{"start":{"line":178,"column":8},"end":{"line":179,"column":108}},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":105}},"52":{"start":{"line":183,"column":8},"end":{"line":197,"column":9}},"53":{"start":{"line":189,"column":10},"end":{"line":192,"column":22}},"54":{"start":{"line":195,"column":13},"end":{"line":197,"column":9}},"55":{"start":{"line":196,"column":10},"end":{"line":196,"column":90}},"56":{"start":{"line":207,"column":6},"end":{"line":238,"column":7}},"57":{"start":{"line":208,"column":8},"end":{"line":208,"column":36}},"58":{"start":{"line":211,"column":8},"end":{"line":211,"column":38}},"59":{"start":{"line":214,"column":8},"end":{"line":214,"column":24}},"60":{"start":{"line":215,"column":8},"end":{"line":237,"column":9}},"61":{"start":{"line":218,"column":10},"end":{"line":221,"column":74}},"62":{"start":{"line":224,"column":10},"end":{"line":232,"column":11}},"63":{"start":{"line":225,"column":12},"end":{"line":225,"column":99}},"64":{"start":{"line":229,"column":12},"end":{"line":230,"column":83}},"65":{"start":{"line":231,"column":12},"end":{"line":231,"column":107}},"66":{"start":{"line":236,"column":10},"end":{"line":236,"column":29}},"67":{"start":{"line":243,"column":0},"end":{"line":243,"column":34}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":22},"end":{"line":50,"column":54}},{"start":{"line":50,"column":59},"end":{"line":50,"column":85}},{"start":{"line":50,"column":89},"end":{"line":50,"column":98}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":21},"end":{"line":51,"column":33}},{"start":{"line":51,"column":37},"end":{"line":51,"column":64}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":18}},{"start":{"line":52,"column":22},"end":{"line":52,"column":34}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"7":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":15},"end":{"line":100,"column":31}},{"start":{"line":100,"column":35},"end":{"line":100,"column":52}}]},"8":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"9":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":68},"end":{"line":119,"column":78}},{"start":{"line":119,"column":82},"end":{"line":119,"column":85}}]},"10":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":49},"end":{"line":139,"column":60}},{"start":{"line":140,"column":15},"end":{"line":141,"column":17}}]},"11":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":46},"end":{"line":140,"column":104}},{"start":{"line":141,"column":15},"end":{"line":141,"column":17}}]},"12":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":9},"end":{"line":146,"column":9}},{"start":{"line":146,"column":9},"end":{"line":146,"column":9}}]},"14":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]},"15":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":20},"end":{"line":173,"column":37}},{"start":{"line":173,"column":42},"end":{"line":173,"column":79}}]},"16":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"17":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":31},"end":{"line":179,"column":48}},{"start":{"line":179,"column":52},"end":{"line":179,"column":107}}]},"18":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":20},"end":{"line":182,"column":36}},{"start":{"line":182,"column":40},"end":{"line":182,"column":63}},{"start":{"line":182,"column":67},"end":{"line":182,"column":104}}]},"19":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":183,"column":8}},{"start":{"line":183,"column":8},"end":{"line":183,"column":8}}]},"20":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":13},"end":{"line":195,"column":13}},{"start":{"line":195,"column":13},"end":{"line":195,"column":13}}]},"21":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":26},"end":{"line":211,"column":31}},{"start":{"line":211,"column":35},"end":{"line":211,"column":37}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"23":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":13},"end":{"line":215,"column":22}},{"start":{"line":215,"column":28},"end":{"line":215,"column":37}}]},"24":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":25},"end":{"line":220,"column":28}},{"start":{"line":220,"column":32},"end":{"line":220,"column":88}}]},"25":{"line":221,"type":"cond-expr","locations":[{"start":{"line":221,"column":45},"end":{"line":221,"column":68}},{"start":{"line":221,"column":71},"end":{"line":221,"column":73}}]},"26":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":10},"end":{"line":224,"column":10}},{"start":{"line":224,"column":10},"end":{"line":224,"column":10}}]},"27":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":19},"end":{"line":225,"column":27}},{"start":{"line":225,"column":31},"end":{"line":225,"column":83}},{"start":{"line":225,"column":87},"end":{"line":225,"column":98}}]},"28":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":31},"end":{"line":229,"column":39}},{"start":{"line":229,"column":43},"end":{"line":229,"column":76}}]},"29":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":31},"end":{"line":230,"column":39}},{"start":{"line":230,"column":43},"end":{"line":230,"column":82}}]},"30":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":36},"end":{"line":231,"column":92}},{"start":{"line":231,"column":95},"end":{"line":231,"column":106}}]}},"code":["/*"," * MIT License http://opensource.org/licenses/MIT"," * Author: Ben Holloway @bholloway"," */","'use strict';","","var path              = require('path'),","    fs                = require('fs'),","    loaderUtils       = require('loader-utils'),","    rework            = require('rework'),","    visit             = require('rework-visit'),","    convert           = require('convert-source-map'),","    camelcase         = require('camelcase'),","    defaults          = require('lodash.defaults'),","    SourceMapConsumer = require('source-map').SourceMapConsumer;","","var findFile           = require('./lib/find-file'),","    absoluteToRelative = require('./lib/sources-absolute-to-relative'),","    adjustSourceMap    = require('adjust-sourcemap-loader/lib/process');","","var PACKAGE_NAME = require('./package.json').name;","","/**"," * A webpack loader that resolves absolute url() paths relative to their original source file."," * Requires source-maps to do any meaningful work."," * @param {string} content Css content"," * @param {object} sourceMap The source-map"," * @returns {string|String}"," */","function resolveUrlLoader(content, sourceMap) {","  /* jshint validthis:true */","","  // details of the file being processed","  var loader   = this,","      filePath = path.dirname(loader.resourcePath);","","  // webpack 1: prefer loader query, else options object","  // webpack 2; prefer loader options","  var options = defaults(loaderUtils.getOptions(loader), loader.options[camelcase(PACKAGE_NAME)], {","    absolute : false,","    sourceMap: false,","    fail     : false,","    silent   : false,","    keepQuery: false,","    debug    : false,","    root     : null","  });","","  // validate root directory","  var resolvedRoot = (typeof options.root === 'string') && path.resolve(options.root) || undefined,","      isValidRoot  = resolvedRoot && fs.existsSync(resolvedRoot);","  if (options.root && !isValidRoot) {","    return handleException('\"root\" option does not resolve to a valid path');","  }","","  // loader result is cacheable","  loader.cacheable();","","  // incoming source-map","  var sourceMapConsumer, contentWithMap, sourceRoot;","  if (sourceMap) {","","    // support non-standard string encoded source-map (per less-loader)","    if (typeof sourceMap === 'string') {","      try {","        sourceMap = JSON.parse(sourceMap);","      }","      catch (exception) {","        return handleException('source-map error', 'cannot parse source-map string (from less-loader?)');","      }","    }","","    // Note the current sourceRoot before it is removed","    //  later when we go back to relative paths, we need to add it again","    sourceRoot = sourceMap.sourceRoot;","","    // leverage adjust-sourcemap-loader's codecs to avoid having to make any assumptions about the sourcemap","    //  historically this is a regular source of breakage","    var absSourceMap;","    try {","      absSourceMap = adjustSourceMap(this, {format: 'absolute'}, sourceMap);","    }","    catch (exception) {","      return handleException('source-map error', exception.message);","    }","","    // prepare the adjusted sass source-map for later look-ups","    sourceMapConsumer = new SourceMapConsumer(absSourceMap);","","    // embed source-map in css for rework-css to use","    contentWithMap = content + convert.fromObject(absSourceMap).toComment({multiline: true});","  }","  // absent source map","  else {","    contentWithMap = content;","  }","","  // process","  //  rework-css will throw on css syntax errors","  var useMap = loader.sourceMap || options.sourceMap,","      reworked;","  try {","    reworked = rework(contentWithMap, {source: loader.resourcePath})","      .use(reworkPlugin)","      .toString({","        sourcemap        : useMap,","        sourcemapAsObject: useMap","      });","  }","    //  fail gracefully","  catch (exception) {","    return handleException('CSS error', exception);","  }","","  // complete with source-map","  if (useMap) {","","    // source-map sources seem to be relative to the file being processed","    absoluteToRelative(reworked.map.sources, path.resolve(filePath, sourceRoot || '.'));","","    // Set source root again","    reworked.map.sourceRoot = sourceRoot;","","    // need to use callback when there are multiple arguments","    loader.callback(null, reworked.code, reworked.map);","  }","  // complete without source-map","  else {","    return reworked;","  }","","  /**","   * Push an error for the given exception and return the original content.","   * @param {string} label Summary of the error","   * @param {string|Error} [exception] Optional extended error details","   * @returns {string} The original CSS content","   */","  function handleException(label, exception) {","    var rest = (typeof exception === 'string') ? [exception] :","               (exception instanceof Error) ? [exception.message, exception.stack.split('\\n')[1].trim()] :","               [];","    var message = '  resolve-url-loader cannot operate: ' + [label].concat(rest).filter(Boolean).join('\\n  ');","    if (options.fail) {","      loader.emitError(message);","    }","    else if (!options.silent) {","      loader.emitWarning(message);","    }","    return content;","  }","","  /**","   * Plugin for css rework that follows SASS transpilation","   * @param {object} stylesheet AST for the CSS output from SASS","   */","  function reworkPlugin(stylesheet) {","    var URL_STATEMENT_REGEX = /(url\\s*\\()\\s*(?:(['\"])((?:(?!\\2).)*)(\\2)|([^'\"](?:(?!\\)).)*[^'\"]))\\s*(\\))/g;","","    // visit each node (selector) in the stylesheet recursively using the official utility method","    //  each node may have multiple declarations","    visit(stylesheet, function visitor(declarations) {","      if (declarations) {","        declarations","          .forEach(eachDeclaration);","      }","    });","","    /**","     * Process a declaration from the syntax tree.","     * @param declaration","     */","    function eachDeclaration(declaration) {","      var isValid = declaration.value && (declaration.value.indexOf('url') >= 0),","          directory;","      if (isValid) {","","        // reverse the original source-map to find the original sass file","        var startPosApparent = declaration.position.start,","            startPosOriginal = sourceMapConsumer && sourceMapConsumer.originalPositionFor(startPosApparent);","","        // we require a valid directory for the specified file","        directory = startPosOriginal && startPosOriginal.source && path.dirname(startPosOriginal.source);","        if (directory) {","","          // allow multiple url() values in the declaration","          //  split by url statements and process the content","          //  additional capture groups are needed to match quotations correctly","          //  escaped quotations are not considered","          declaration.value = declaration.value","            .split(URL_STATEMENT_REGEX)","            .map(eachSplitOrGroup)","            .join('');","        }","        // source-map present but invalid entry","        else if (sourceMapConsumer) {","          throw new Error('source-map information is not available at url() declaration');","        }","      }","","      /**","       * Encode the content portion of <code>url()</code> statements.","       * There are 4 capture groups in the split making every 5th unmatched.","       * @param {string} token A single split item","       * @param i The index of the item in the split","       * @returns {string} Every 3 or 5 items is an encoded url everything else is as is","       */","      function eachSplitOrGroup(token, i) {","        var BACKSLASH_REGEX = /\\\\/g;","","        // we can get groups as undefined under certain match circumstances","        var initialised = token || '';","","        // the content of the url() statement is either in group 3 or group 5","        var mod = i % 7;","        if ((mod === 3) || (mod === 5)) {","","          // split into uri and query/hash and then find the absolute path to the uri","          var split    = initialised.split(/([?#])/g),","              uri      = split[0],","              absolute = uri && findFile(options).absolute(directory, uri, resolvedRoot),","              query    = options.keepQuery ? split.slice(1).join('') : '';","","          // use the absolute path (or default to initialised)","          if (options.absolute) {","            return absolute && absolute.replace(BACKSLASH_REGEX, '/').concat(query) || initialised;","          }","          // module relative path (or default to initialised)","          else {","            var relative     = absolute && path.relative(filePath, absolute),","                rootRelative = relative && loaderUtils.urlToRequest(relative, '~');","            return (rootRelative) ? rootRelative.replace(BACKSLASH_REGEX, '/').concat(query) : initialised;","          }","        }","        // everything else, including parentheses and quotation (where present) and media statements","        else {","          return initialised;","        }","      }","    }","  }","}","","module.exports = resolveUrlLoader;",""],"l":{"7":1,"17":1,"21":1,"30":1,"34":0,"39":0,"50":0,"52":0,"53":0,"57":0,"60":0,"61":0,"64":0,"65":0,"66":0,"69":0,"75":0,"79":0,"80":0,"81":0,"84":0,"88":0,"91":0,"95":0,"100":0,"102":0,"103":0,"112":0,"116":0,"119":0,"122":0,"125":0,"129":0,"138":1,"139":0,"142":0,"143":0,"144":0,"146":0,"147":0,"149":0,"156":1,"157":0,"161":0,"162":0,"163":0,"172":1,"173":0,"175":0,"178":0,"182":0,"183":0,"189":0,"195":0,"196":0,"207":1,"208":0,"211":0,"214":0,"215":0,"218":0,"224":0,"225":0,"229":0,"231":0,"236":0,"243":1}},"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/lib/find-file.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/lib/find-file.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1},"b":{"1":[0,0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"findFile","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}}},"2":{"name":"absolute","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":43}}},"3":{"name":"base","line":43,"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":39}}},"4":{"name":"enqueue","line":100,"loc":{"start":{"line":100,"column":4},"end":{"line":100,"column":38}}},"5":{"name":"notHidden","line":102,"loc":{"start":{"line":102,"column":16},"end":{"line":102,"column":45}}},"6":{"name":"toAbsolute","line":105,"loc":{"start":{"line":105,"column":13},"end":{"line":105,"column":43}}},"7":{"name":"directoriesOnly","line":108,"loc":{"start":{"line":108,"column":16},"end":{"line":108,"column":55}}},"8":{"name":"notInRootPath","line":111,"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":53}}},"9":{"name":"enqueue","line":115,"loc":{"start":{"line":115,"column":17},"end":{"line":115,"column":48}}},"10":{"name":"testWithinLimit","line":125,"loc":{"start":{"line":125,"column":4},"end":{"line":125,"column":43}}},"11":{"name":"flushMessages","line":134,"loc":{"start":{"line":134,"column":4},"end":{"line":134,"column":35}}},"12":{"name":"testNotPackage","line":150,"loc":{"start":{"line":150,"column":2},"end":{"line":150,"column":40}}},"13":{"name":"fileFound","line":151,"loc":{"start":{"line":151,"column":48},"end":{"line":151,"column":73}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"3":{"start":{"line":13,"column":0},"end":{"line":155,"column":1}},"4":{"start":{"line":14,"column":2},"end":{"line":16,"column":5}},"5":{"start":{"line":17,"column":2},"end":{"line":20,"column":4}},"6":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":61}},"9":{"start":{"line":43,"column":2},"end":{"line":143,"column":3}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":58}},"12":{"start":{"line":50,"column":4},"end":{"line":50,"column":74}},"13":{"start":{"line":51,"column":4},"end":{"line":93,"column":5}},"14":{"start":{"line":54,"column":6},"end":{"line":54,"column":26}},"15":{"start":{"line":55,"column":6},"end":{"line":55,"column":20}},"16":{"start":{"line":56,"column":6},"end":{"line":60,"column":26}},"17":{"start":{"line":57,"column":8},"end":{"line":57,"column":39}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":84}},"19":{"start":{"line":59,"column":8},"end":{"line":59,"column":58}},"20":{"start":{"line":63,"column":6},"end":{"line":63,"column":38}},"21":{"start":{"line":67,"column":6},"end":{"line":83,"column":7}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":37}},"23":{"start":{"line":71,"column":8},"end":{"line":71,"column":51}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":32}},"25":{"start":{"line":75,"column":8},"end":{"line":82,"column":9}},"26":{"start":{"line":76,"column":10},"end":{"line":76,"column":33}},"27":{"start":{"line":77,"column":10},"end":{"line":77,"column":26}},"28":{"start":{"line":81,"column":10},"end":{"line":81,"column":35}},"29":{"start":{"line":86,"column":6},"end":{"line":86,"column":33}},"30":{"start":{"line":87,"column":6},"end":{"line":87,"column":18}},"31":{"start":{"line":91,"column":6},"end":{"line":91,"column":31}},"32":{"start":{"line":92,"column":6},"end":{"line":92,"column":18}},"33":{"start":{"line":100,"column":4},"end":{"line":118,"column":5}},"34":{"start":{"line":101,"column":6},"end":{"line":117,"column":11}},"35":{"start":{"line":103,"column":10},"end":{"line":103,"column":46}},"36":{"start":{"line":106,"column":10},"end":{"line":106,"column":47}},"37":{"start":{"line":109,"column":10},"end":{"line":109,"column":88}},"38":{"start":{"line":112,"column":10},"end":{"line":112,"column":56}},"39":{"start":{"line":116,"column":10},"end":{"line":116,"column":35}},"40":{"start":{"line":125,"column":4},"end":{"line":128,"column":5}},"41":{"start":{"line":126,"column":6},"end":{"line":126,"column":56}},"42":{"start":{"line":127,"column":6},"end":{"line":127,"column":59}},"43":{"start":{"line":134,"column":4},"end":{"line":142,"column":5}},"44":{"start":{"line":135,"column":6},"end":{"line":141,"column":7}},"45":{"start":{"line":136,"column":8},"end":{"line":139,"column":24}},"46":{"start":{"line":140,"column":8},"end":{"line":140,"column":26}},"47":{"start":{"line":150,"column":2},"end":{"line":154,"column":3}},"48":{"start":{"line":151,"column":4},"end":{"line":153,"column":7}},"49":{"start":{"line":152,"column":6},"end":{"line":152,"column":62}},"50":{"start":{"line":157,"column":0},"end":{"line":157,"column":26}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":21}},{"start":{"line":32,"column":25},"end":{"line":32,"column":52}},{"start":{"line":32,"column":56},"end":{"line":32,"column":60}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":17}},{"start":{"line":47,"column":21},"end":{"line":47,"column":40}},{"start":{"line":47,"column":44},"end":{"line":47,"column":57}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":24},"end":{"line":50,"column":46}},{"start":{"line":50,"column":50},"end":{"line":50,"column":73}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":50}},{"start":{"line":58,"column":54},"end":{"line":58,"column":83}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"7":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":17},"end":{"line":109,"column":44}},{"start":{"line":109,"column":48},"end":{"line":109,"column":87}}]},"8":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":13},"end":{"line":127,"column":23}},{"start":{"line":127,"column":28},"end":{"line":127,"column":57}}]},"9":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]}},"code":["'use strict';","","var fs       = require('fs'),","    path     = require('path'),","    defaults = require('lodash.defaults');","","var PACKAGE_NAME = require('../package.json').name;","","/**"," * Factory for find-file with the given <code>options</code> hash."," * @param {{debug: boolean}} [opt] Optional options hash"," */","function findFile(opt) {","  var options = defaults(opt, {","    debug: false","  });","  return {","    absolute: absolute,","    base    : base","  };","","  /**","   * Search for the relative file reference from the <code>startPath</code> up to the process","   * working directory, avoiding any other directories with a <code>package.json</code> or <code>bower.json</code>.","   * @param {string} startPath The location of the uri declaration and the place to start the search from","   * @param {string} uri The content of the url() statement, expected to be a relative file path","   * @param {string} [limit] Optional directory to limit the search to","   * @returns {string|null} <code>null</code> where not found else the absolute path to the file","   */","  function absolute(startPath, uri, limit) {","    var basePath = base(startPath, uri, limit);","    return !!basePath && path.resolve(basePath, uri) || null;","  }","","  /**","   * Search for the relative file reference from the <code>startPath</code> up to the process","   * working directory, avoiding any other directories with a <code>package.json</code> or <code>bower.json</code>.","   * @param {string} startPath The location of the uri declaration and the place to start the search from","   * @param {string} uri The content of the url() statement, expected to be a relative file path","   * @param {string} [limit] Optional directory to limit the search to","   * @returns {string|null} <code>null</code> where not found else the base path upon which the uri may be resolved","   */","  function base(startPath, uri, limit) {","    var messages = [];","","    // ensure we have some limit to the search","    limit = limit && path.resolve(limit) || process.cwd();","","    // ignore data uris and ensure we are at a valid start path","    var absoluteStart = !(/^data\\:/.test(uri)) && path.resolve(startPath);","    if (absoluteStart) {","","      // find path to the root, stopping at cwd, package.json or bower.json","      var pathToRoot = [];","      var isWorking;","      do {","        pathToRoot.push(absoluteStart);","        isWorking = testWithinLimit(absoluteStart) && testNotPackage(absoluteStart);","        absoluteStart = path.resolve(absoluteStart, '..');","      } while (isWorking);","","      // start a queue with the path to the root","      var queue = pathToRoot.concat();","","      // process the queue until empty","      //  the queue pattern ensures that we favour paths closest the the start path","      while (queue.length) {","","        // shift the first item off the queue, consider it the base for our relative uri","        var basePath = queue.shift();","        var fullPath = path.resolve(basePath, uri);","        messages.push(basePath);","","        // file exists so convert to a dataURI and end","        if (fs.existsSync(fullPath)) {","          flushMessages('FOUND');","          return basePath;","        }","        // enqueue subdirectories that are not packages and are not in the root path","        else {","          enqueue(queue, basePath);","        }","      }","","      // not found","      flushMessages('NOT FOUND');","      return null;","    }","    // ignored","    else {","      flushMessages('IGNORED');","      return null;","    }","","    /**","     * Enqueue subdirectories that are not packages and are not in the root path","     * @param {Array} queue The queue to add to","     * @param {string} basePath The path to consider","     */","    function enqueue(queue, basePath) {","      fs.readdirSync(basePath)","        .filter(function notHidden(filename) {","          return (filename.charAt(0) !== '.');","        })","        .map(function toAbsolute(filename) {","          return path.join(basePath, filename);","        })","        .filter(function directoriesOnly(absolutePath) {","          return fs.existsSync(absolutePath) && fs.statSync(absolutePath).isDirectory();","        })","        .filter(function notInRootPath(absolutePath) {","          return (pathToRoot.indexOf(absolutePath) < 0);","        })","        .filter(testNotPackage)","        .forEach(function enqueue(absolutePath) {","          queue.push(absolutePath);","        });","    }","","    /**","     * Test whether the given directory is above but not equal to any of the project root directories.","     * @param {string} absolutePath An absolute path","     * @returns {boolean} True where a package.json or bower.json exists, else False","     */","    function testWithinLimit(absolutePath) {","      var relative = path.relative(limit, absolutePath);","      return !!relative && (relative.slice(0, 2) !== '..');","    }","","    /**","     * Print verbose debug info where <code>options.debug</code> is in effect.","     * @param {string} result Final text to append to the message","     */","    function flushMessages(result) {","      if (options.debug) {","        var text = ['\\n' + PACKAGE_NAME + ': ' + uri]","          .concat(messages)","          .concat(result)","          .join('\\n  ');","        console.log(text);","      }","    }","  }","","  /**","   * Test whether the given directory is the root of its own package.","   * @param {string} absolutePath An absolute path","   * @returns {boolean} True where a package.json or bower.json exists, else False","   */","  function testNotPackage(absolutePath) {","    return ['package.json', 'bower.json'].every(function fileFound(file) {","      return !fs.existsSync(path.resolve(absolutePath, file));","    });","  }","}","","module.exports = findFile;",""],"l":{"3":1,"7":1,"13":1,"14":0,"17":0,"30":1,"31":0,"32":0,"43":1,"44":0,"47":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"63":0,"67":0,"70":0,"71":0,"72":0,"75":0,"76":0,"77":0,"81":0,"86":0,"87":0,"91":0,"92":0,"100":1,"101":0,"103":0,"106":0,"109":0,"112":0,"116":0,"125":1,"126":0,"127":0,"134":1,"135":0,"136":0,"140":0,"150":1,"151":0,"152":0,"157":1}},"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/lib/sources-absolute-to-relative.js":{"path":"/home/travis/build/npmtest/node-npmtest-resolve-url-loader/node_modules/resolve-url-loader/lib/sources-absolute-to-relative.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"sourcesAbsoluteToRelative","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":71}}},"2":{"name":"sourceToRelative","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":36}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}}},"branchMap":{},"code":["/*"," * MIT License http://opensource.org/licenses/MIT"," * Author: Ben Holloway @bholloway"," */","'use strict';","","var path = require('path');","","/**"," * Convert the given array of absolute URIs to relative URIs (in place)."," * @param {Array} sources The source map sources array"," * @param {string} basePath The base path to make relative to"," */","module.exports = function sourcesAbsoluteToRelative(sources, basePath) {","  sources.forEach(sourceToRelative);","","  function sourceToRelative(value, i, array) {","    array[i] = path.relative(basePath, value);","  }","};"],"l":{"7":1,"14":1,"15":0,"17":1,"18":0}}}